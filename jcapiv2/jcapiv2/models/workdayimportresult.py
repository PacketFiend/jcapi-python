# coding: utf-8

"""
    JumpCloud APIs

    V1 & V2 versions of JumpCloud's API. The next version of JumpCloud's API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings. The most recent version of JumpCloud's API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings.

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class Workdayimportresult(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'success': 'bool',
        'result': 'WorkdayimportresultResult'
    }

    attribute_map = {
        'success': 'success',
        'result': 'result'
    }

    def __init__(self, success=None, result=None):
        """
        Workdayimportresult - a model defined in Swagger
        """

        self._success = None
        self._result = None

        if success is not None:
          self.success = success
        if result is not None:
          self.result = result

    @property
    def success(self):
        """
        Gets the success of this Workdayimportresult.

        :return: The success of this Workdayimportresult.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """
        Sets the success of this Workdayimportresult.

        :param success: The success of this Workdayimportresult.
        :type: bool
        """

        self._success = success

    @property
    def result(self):
        """
        Gets the result of this Workdayimportresult.

        :return: The result of this Workdayimportresult.
        :rtype: WorkdayimportresultResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """
        Sets the result of this Workdayimportresult.

        :param result: The result of this Workdayimportresult.
        :type: WorkdayimportresultResult
        """

        self._result = result

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Workdayimportresult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
